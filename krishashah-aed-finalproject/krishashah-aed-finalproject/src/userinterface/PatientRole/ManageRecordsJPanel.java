/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import javax.swing.JPanel;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.Patient.Records;
import Business.Patient.RecordsHistory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientDoctorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mansipandya
 */
public class ManageRecordsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private PatientOrganization patientOrganization;
    private Patient patient;
    private RecordsHistory recordsHistory;

    /**
     * Creates new form ManageRecordsJPanel
     */
    public ManageRecordsJPanel(JPanel userProcessContainer,UserAccount userAccount,PatientOrganization patientOrganization,Enterprise enterprise,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.patientOrganization = (PatientOrganization)patientOrganization;
        this.enterprise = enterprise;
        this.patient = userAccount.getPatient();
        this.recordsHistory = patient.getRecordsHistory();

        //populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) historytbl.getModel();
        model.setRowCount(0);

        DoctorOrganization doctorOrganization = null;
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof DoctorOrganization) {
                DoctorOrganization d = (DoctorOrganization) o;
                doctorOrganization = d;
                break;
            }
        }

        for (WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()) {
            if (request != null) {
                PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest) request;
                Records r = patientDoctorWorkRequest.getRecords();
                    Object[] row = new Object[3];
                    row[0] = r;
                    String respondStatus = patientDoctorWorkRequest.getRespondStatus();
                    row[1] = respondStatus == null ? "Waiting" : respondStatus;

                    model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        historytbl = new javax.swing.JTable();
        addrecbttn = new javax.swing.JButton();
        detailsbttn = new javax.swing.JButton();
        sendtodocbttn = new javax.swing.JButton();
        refreshbttn = new javax.swing.JButton();
        bckbttn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(97, 212, 195));

        historytbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Timestamp", "Respond"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(historytbl);
        if (historytbl.getColumnModel().getColumnCount() > 0) {
            historytbl.getColumnModel().getColumn(0).setResizable(false);
            historytbl.getColumnModel().getColumn(1).setResizable(false);
        }

        addrecbttn.setText("Add Record");
        addrecbttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addrecbttnActionPerformed(evt);
            }
        });

        detailsbttn.setText("View Details");
        detailsbttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsbttnActionPerformed(evt);
            }
        });

        sendtodocbttn.setText("Send to my Doctor");
        sendtodocbttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtodocbttnActionPerformed(evt);
            }
        });

        refreshbttn.setText("Refresh");
        refreshbttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbttnActionPerformed(evt);
            }
        });

        bckbttn.setText("<<Back");
        bckbttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckbttnActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("My History");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(addrecbttn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(detailsbttn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(sendtodocbttn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bckbttn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196)
                        .addComponent(refreshbttn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(refreshbttn)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addrecbttn)
                    .addComponent(detailsbttn)
                    .addComponent(sendtodocbttn)
                    .addComponent(bckbttn))
                .addContainerGap(146, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addrecbttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addrecbttnActionPerformed
        CreateRecordJPanel panel = new CreateRecordJPanel(userProcessContainer, userAccount, patientOrganization, enterprise, ecoSystem);
        userProcessContainer.add("AddingRecordPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);// TODO add your handling code here:
    }//GEN-LAST:event_addrecbttnActionPerformed

    private void refreshbttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbttnActionPerformed
        populateTable();        // TODO add your handling code here:
    }//GEN-LAST:event_refreshbttnActionPerformed

    private void bckbttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bckbttnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);// TODO add your handling code here:
    }//GEN-LAST:event_bckbttnActionPerformed

    private void detailsbttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsbttnActionPerformed
        int selectedRow = historytbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to view details");
        } else {
            Records record = (Records) historytbl.getValueAt(selectedRow, 0);
            ViewUpdateRecordsDetailJPanel panel = new ViewUpdateRecordsDetailJPanel(userProcessContainer, userAccount, patientOrganization, enterprise, ecoSystem);
            userProcessContainer.add("ViewUpdateRecordsDetail", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_detailsbttnActionPerformed

    private void sendtodocbttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtodocbttnActionPerformed
            // TODO add your handling code here:
        int selectedRow = historytbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to view details");
        } else {
            
            UserAccount doctor=(UserAccount) patient.getPrefdoctor();
            PatientDoctorWorkRequest req= new PatientDoctorWorkRequest();
            req.setDoctor(doctor);
            req.setPatientName(userAccount.getName());
            req.setDate();
            req.setNormalOrNot("Normal");
            
            Organization org=null;
            for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
                if(organization instanceof DoctorOrganization){
                    org=organization;
                    break;
                }
            }
            
            if(org!=null){
                org.getWorkQueue().getWorkRequestList().add(req);
                userAccount.getWorkQueue().getWorkRequestList().add(req);
                doctor.getWorkQueue().getWorkRequestList().add(req);
                
                JOptionPane.showMessageDialog(null, "Your Reports have been sent to your Doctor!");
            }
        }
    }//GEN-LAST:event_sendtodocbttnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addrecbttn;
    private javax.swing.JButton bckbttn;
    private javax.swing.JButton detailsbttn;
    private javax.swing.JTable historytbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshbttn;
    private javax.swing.JButton sendtodocbttn;
    // End of variables declaration//GEN-END:variables
}
